bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: rover/map
    robot_base_frame: rover/base_footprint
    odom_topic: /odom/wheels
    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: True

controller_server:
  ros__parameters:
    use_sim_time: True
    odom_topic: /odom/wheels
    controller_frequency: 10.0 # was 20/50.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.3
      movement_time_allowance: 10.0
    # Goal checker parameters
    #precise_goal_checker:
    #  plugin: "nav2_controller::SimpleGoalChecker"
    #  xy_goal_tolerance: 0.25
    #  yaw_goal_tolerance: 0.25
    #  stateful: True
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.15
      yaw_goal_tolerance: 0.15
    FollowPath:
          plugin: "teb_local_planner::TebLocalPlannerROS"
          map_frame: rover/map

          # Trajectory
          teb_autosize: 1.0 
          dt_ref: 0.5 
          dt_hysteresis: 0.2 
          global_plan_overwrite_orientation: True
          max_global_plan_lookahead_dist: 2.0 
          feasibility_check_no_poses: 5
          publish_feedback: true

          # Robot
          max_vel_x: 0.3  # 0.1
          max_vel_x_backwards: 0.05
          max_vel_theta: 2.0  # 15deg more or less
          acc_lim_x: 1.0  # was 1.0
          acc_lim_theta: 1.0  # was 0.3
          min_turning_radius: 0.0 #molto importante, determina se durante la rotazione le ruote possono andare in versi opposti
          footprint_model:
            type: "circular"
            radius: 0.3
          # GoalTolerance
          xy_goal_tolerance: 0.15  
          yaw_goal_tolerance: 0.15  
          free_goal_vel: False

          # Obstacles
          min_obstacle_dist: 0.1 
          include_costmap_obstacles: True
          costmap_obstacles_behind_robot_dist: 1.0
          obstacle_poses_affected: 20
          costmap_converter_plugin: ""
          costmap_converter_spin_thread: True
          costmap_converter_rate: 5.0
          inflation_dist: 0.1
          include_dynamic_obstacles: True

          # Optimization
          no_inner_iterations: 3  
          no_outer_iterations: 2 
          optimization_activate: True
          optimization_verbose: False
          penalty_epsilon: 0.04 
          weight_max_vel_x: 2.0
          weight_max_vel_theta: 1.0
          weight_acc_lim_x: 1.0
          weight_acc_lim_theta: 1.0
          weight_kinematics_nh: 1000.0
          weight_kinematics_forward_drive: 200.0 
          weight_kinematics_turning_radius: 1.0
          weight_optimaltime: 1.0
          weight_obstacle: 100.0 
          weight_dynamic_obstacle: 10.0 
          selection_alternative_time_cost: False 

          # Homotopy Class Planner
          enable_homotopy_class_planning: False
          enable_multithreading: True
          simple_exploration: False
          max_number_classes: 4  # reduce this value to reduce the computational effort
          roadmap_graph_no_samples: 15
          roadmap_graph_area_width: 5.0
          h_signature_prescaler: 0.5
          h_signature_threshold: 0.1

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: rover/odom
      robot_base_frame: rover/base_footprint
      use_sim_time: True
      rolling_window: true
      width: 6
      height: 6
      resolution: 0.05
      robot_radius: 0.3
      plugins: ["voxel_layer", "gradient_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0 
        inflation_radius: 0.3
      gradient_layer:
        plugin: "costmap_plugin/GradientLayer"
        gradient_radius: 0.6
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        footprint_clearing_enabled: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          raytrace_range: 3.0 
          observation_persistence: 0.5
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      # static_layer:
      #   plugin: "nav2_costmap_2d::StaticLayer"
      #   subscribe_to_updates: true
      #   map_subscribe_transient_local: True
      always_send_full_costmap: True
      qos_overrides:
        scan:
          reliability: SENSOR_DATA
          durability: volatile      

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 2.0
      publish_frequency: 1.0
      global_frame: rover/map
      robot_base_frame: rover/base_footprint
      use_sim_time: True
      robot_radius: 0.3
      resolution: 0.05
      track_unknown_space: true
      plugins: [ "static_layer", "obstacle_layer", "gradient_layer"]      
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        subscribe_to_updates: true
        map_subscribe_transient_local: True
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        footprint_clearing_enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          raytrace_range: 3.0 
          observation_persistence: 0.5
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 10.0 
        inflation_radius: 0.4
      gradient_layer:
        plugin: "costmap_plugin/GradientLayer"
        gradient_radius: 0.6
      always_send_full_costmap: True
      qos_overrides:
        scan:
          reliability: SENSOR_DATA
          durability: volatile            

map_server:
  ros__parameters:
    use_sim_time: True
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: True
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 10.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"  # "nav2_straightline_planner/StraightLine" "nav2_astar_planner/AStarPlanner"
      tolerance: 0.2
      use_astar: false
      allow_unknown: True

smoother_server:
  ros__parameters:
    use_sim_time: True
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: rover/odom
    robot_base_frame: rover/base_footprint
    transform_tolerance: 0.1
    use_sim_time: True
    simulate_ahead_time: 2.0
    max_rotational_vel: 2.0
    min_rotational_vel: 0.0
    rotational_acc_lim: 1.0

robot_state_publisher:
  ros__parameters:
    use_sim_time: True

waypoint_follower:
  ros__parameters:
    use_sim_time: True
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 10.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.3, 0.0, 2.0]
    min_velocity: [-0.3, 0.0, -2.0]
    max_accel: [0.1, 0.0, 1.0]
    max_decel: [-1.0, 0.0, -1.0]
    odom_topic: "odom/wheels"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0